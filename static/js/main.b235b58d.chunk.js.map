{"version":3,"sources":["edition10.jpg","edition11.jpg","edition9.jpg","Edition.ts","EditionDownloadButton.tsx","EditionGithubButton.tsx","EditionVendorButton.tsx","EditionDisplay.tsx","EditionSelectorItem.tsx","EditionSelector.tsx","Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Edition","edition","version","vendorURL","image","available","release","n","this","slice","branch","EditionDownloadButton","useState","knownReleases","setKnownReleases","error","setError","fetch","then","resp","a","json","undefined","catch","disabled","className","icon","faSpinner","faExclamationTriangle","releasesForEdition","filter","r","name","startsWith","sort","b","length","href","assets","browser_download_url","rel","target","faDownload","EditionGithubButton","githubURL","faGithub","EditionVendorButton","faShoppingBasket","EditionDisplay","title","src","alt","EditionSelectorItem","selected","now","onClick","classNames","join","month","getMonth","year","getFullYear","day","getDate","push","EditionSelector","editions","children","p","document","location","hash","replace","e","console","Error","selectEdition","setSelected","editionButtons","Date","item","key","Footer","e11","e10","e9","App","header","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b235b58d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edition10.9ab84d10.jpg\";","module.exports = __webpack_public_path__ + \"static/media/edition11.acf8a987.jpg\";","module.exports = __webpack_public_path__ + \"static/media/edition9.88663400.jpg\";","export class Edition {\n    public constructor(\n        public readonly edition: number,\n        public readonly version: string,\n        public readonly vendorURL: string,\n        public readonly image: string,\n        public readonly available: boolean = true,\n        public readonly release?: Date\n    ) { }\n\n    public get branch(): string {\n        const n = (\"00\" + this.edition).slice(-2);\n        return `edition-${n}`;\n    }\n\n    public get githubURL(): string {\n        return `https://github.com/martin-helmich/praxiswissen-typo3/tree/${this.branch}`;\n    }\n\n}","import { faDownload, faExclamationTriangle, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from 'react';\nimport { Edition } from \"./Edition\";\n\ninterface EditionDownloadButtonProps {\n    edition: Edition;\n}\n\ntype EditionDownloadButtonState = undefined\n    | { knownReleases: Release[] }\n    | { error: any };\n\ninterface ReleaseAsset {\n    browser_download_url: string;\n}\n\ninterface Release {\n    name: string,\n    assets: ReleaseAsset[];\n}\n\nexport function EditionDownloadButton({ edition }: EditionDownloadButtonProps) {\n    const [knownReleases, setKnownReleases] = useState<Release[]>();\n    const [error, setError] = useState<any>();\n    const url = `https://api.github.com/repos/martin-helmich/praxiswissen-typo3/releases`;\n\n    if (!knownReleases) {\n        fetch(url)\n            .then(async resp => {\n                setKnownReleases(await resp.json());\n                setError(undefined);\n            })\n            .catch(error => {\n                setError(error)\n            });\n\n        return <button disabled={true} className=\"btn btn-block btn-primary\">\n            <FontAwesomeIcon icon={faSpinner} />\n            Dateien herunterladen\n        </button>\n    }\n\n    if (error) {\n        return <button disabled={true} className=\"btn btn-block btn-danger\">\n            <FontAwesomeIcon icon={faExclamationTriangle} />\n            Download nicht verfügbar\n        </button>\n    }\n\n    const releasesForEdition = knownReleases\n        .filter(r => r.name.startsWith(edition.branch))\n        .sort((a, b) => a.name < b.name ? 1 : -1);\n\n    if (releasesForEdition.length === 0) {\n        return <button disabled={true} className=\"btn btn-block btn-warning\">\n            <FontAwesomeIcon icon={faExclamationTriangle} />\n            Download nicht verfügbar\n        </button>\n    }\n\n    return <a\n        href={releasesForEdition[0].assets[0].browser_download_url}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        className=\"btn btn-block btn-primary\"\n    >\n        <FontAwesomeIcon icon={faDownload} />\n        Dateien herunterladen\n    </a>;\n}\n\nexport default EditionDownloadButton;","import React from 'react';\nimport {Edition} from \"./Edition\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faGithub} from \"@fortawesome/free-brands-svg-icons\";\n\ninterface EditionDisplayProps {\n    edition: Edition;\n}\n\nexport function EditionGithubButton({edition}: EditionDisplayProps) {\n    return <a\n        href={edition.githubURL}\n        /* eslint-disable-next-line react/jsx-no-target-blank */\n        target=\"_blank\"\n        className=\"btn btn-block btn-light\"\n    >\n        <FontAwesomeIcon icon={faGithub}/>\n        GitHub\n    </a>;\n}\n\nexport default EditionGithubButton;","import React from 'react';\nimport {Edition} from \"./Edition\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faShoppingBasket} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface EditionVendorButtonProps {\n    edition: Edition;\n}\n\nexport function EditionVendorButton({edition}: EditionVendorButtonProps) {\n    return <a\n        href={edition.vendorURL}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"btn btn-block btn-light\">\n        <FontAwesomeIcon icon={faShoppingBasket}/>\n        Kaufen\n    </a>;\n}\n\nexport default EditionVendorButton;","import React from 'react';\nimport { Edition } from \"./Edition\";\nimport EditionDownloadButton from \"./EditionDownloadButton\";\nimport EditionGithubButton from \"./EditionGithubButton\";\nimport EditionVendorButton from \"./EditionVendorButton\";\nimport \"./EditionDisplay.scss\";\n\ninterface EditionDisplayProps {\n    edition: Edition;\n}\n\nexport function EditionDisplay({ edition }: EditionDisplayProps) {\n    const title = `Praxiswissen TYPO3 ${edition.version}, ${edition.edition}. Auflage`;\n    return <div className=\"card\">\n        <img\n            className=\"card-img-top\"\n            src={edition.image}\n            alt={title}\n            title={title}\n        />\n        <div className=\"card-body\">\n            <EditionDownloadButton edition={edition} />\n            <EditionGithubButton edition={edition}/>\n            <EditionVendorButton edition={edition}/>\n        </div>\n    </div>;\n}\n\nexport default EditionDisplay;","import React from 'react';\nimport { Edition } from \"./Edition\";\n\ninterface EditionSelectorItemProps {\n    edition: Edition;\n    selected: Edition;\n    now: Date;\n    onClick: () => any;\n}\n\nfunction EditionSelectorItem({ edition, selected, now, onClick }: EditionSelectorItemProps) {\n    const classNames = [\"btn\", \"btn-light\", \"btn-block\"];\n\n    if (!edition.available) {\n        return <button className={classNames.join(\" \")} disabled={true}>\n            {edition.edition}. Auflage, für TYPO3 {edition.version}&nbsp;\n            <span className=\"badge badge-success\">COMING SOON</span>\n        </button>;\n    }\n\n    if (edition.release && edition.release > now) {\n        const month = edition.release.getMonth() + 1;\n        const year = edition.release.getFullYear();\n        const day = edition.release.getDate();\n\n        return <button className={classNames.join(\" \")} onClick={onClick}>\n            {edition.edition}. Auflage, für TYPO3 {edition.version}&nbsp;\n            <span className=\"badge badge-success\">Verfügbar ab {day}. {month}. {year}</span>\n        </button>;\n    }\n\n    if (edition === selected) {\n        classNames.push(\"active\");\n    }\n\n    return <button className={classNames.join(\" \")} onClick={onClick}>\n        {edition.edition}. Auflage, für TYPO3 {edition.version}\n    </button>;\n}\n\nexport default EditionSelectorItem;","import React, { FunctionComponent, useState } from 'react';\nimport { Edition } from \"./Edition\";\nimport EditionDisplay from \"./EditionDisplay\";\nimport './EditionSelector.scss';\nimport EditionSelectorItem from \"./EditionSelectorItem\";\n\ninterface EditionSelectorProps {\n    editions: Edition[];\n}\n\nfunction selectEdition(editions: Edition[]): Edition {\n    const p = document.location.hash.replace(/^#/, \"\");\n\n    for (const e of editions) {\n        if (!e.available) {\n            continue;\n        }\n\n        if (p === \"\") {\n            return e;\n        }\n\n        if (e.version.startsWith(p)) {\n            return e;\n        }\n    }\n\n    if (p !== \"\") {\n        console.error(`no matching release for ${p} could be found; defaulting to latest available release`);\n        for (const e of editions) {\n            if (e.available) {\n                return e;\n            }\n        }\n    }\n\n    throw new Error(\"no editions given\");\n}\n\nconst EditionSelector: FunctionComponent<EditionSelectorProps> = ({ editions, children }) => {\n    const [selected, setSelected] = useState(selectEdition(editions));\n\n    const editionButtons: JSX.Element[] = [];\n    const now = new Date();\n\n    for (const e of editions) {\n        const item = <EditionSelectorItem\n            key={e.edition}\n            edition={e}\n            selected={selected}\n            now={now}\n            onClick={() => {\n                setSelected(e);\n                document.location.hash = e.version;\n            }}\n        />;\n\n        editionButtons.push(item);\n    }\n\n    return <div className=\"row align-items-center\">\n        <div className=\"col-lg-7 col-md-6 col-sm-4 mt-md-3 mb-5 left\">\n            {children}\n\n            <h3>Mit welcher Auflage arbeiten Sie?</h3>\n            {editionButtons}\n        </div>\n        <div className=\"col-lg-5 col-md-6 col-sm-8 right\">\n            <EditionDisplay edition={selected} />\n        </div>\n    </div>;\n}\n\nexport default EditionSelector;","import React from \"react\";\n\nfunction Footer() {\n    return <footer className=\"pt-4 my-4 my-md-5 pt-md-5 border-top\">\n        <div className=\"row\">\n            <div className=\"col-6 col-md\">\n                © Martin Helmich 2020\n            </div>\n            <div className=\"col-6 col-md text-right\">\n                <h5>Weiteres</h5>\n                <ul className=\"list-unstyled text-small\">\n                    <li><a className=\"text-muted\" href=\"https://www.martin-helmich.de/de/ueber-mich.html\">Über mich</a></li>\n                    <li><a className=\"text-muted\" href=\"https://www.martin-helmich.de/de/impressum.html\">Impressum</a></li>\n                </ul>\n            </div>\n        </div>\n    </footer>;\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport { Edition } from './Edition';\nimport e10 from './edition10.jpg';\nimport e11 from './edition11.jpg';\nimport e9 from './edition9.jpg';\nimport EditionSelector from './EditionSelector';\nimport Footer from \"./Footer\";\n\nconst editions = [\n    new Edition(11, \"10.4\", \"https://dpunkt.de/produkt/praxiswissen-typo3-cms-10-lts/\", e11, true, new Date(\"2020-11-30\")),\n    new Edition(10, \"9.5\", \"https://www.oreilly.de/buecher/13303.html\", e10),\n    new Edition(9, \"8.7\", \"https://www.oreilly.de/buecher/13123.html\", e9),\n];\n\nfunction App() {\n    const header = <>\n        <h1>Praxiswissen TYPO3</h1>\n        <div className=\"mb-5\">\n            Auf dieser Seite finden Sie die Beispieldateien, Vorlagen & Skripte zum\n            Buch <em>Praxiswissen TYPO3</em>, erschienen im O'Reilly-Verlag.\n        </div>\n    </>;\n\n    return (\n        <div className=\"App\">\n            <div className=\"container-lg\">\n                <div className=\"d-md-none mt-5\">{header}</div>\n                <div className=\"my-md-4\">\n                    <EditionSelector editions={editions}>\n                        <div className=\"d-none d-md-block\">{header}</div>\n                    </EditionSelector>\n                </div>\n                <Footer />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}